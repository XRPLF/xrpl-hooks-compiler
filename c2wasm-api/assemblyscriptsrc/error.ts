export const SUCCESS = 0                  // return codes > 0 are reserved for hook apis to return "success"
export const OUT_OF_BOUNDS = -1           // could not read or write to a pointer to provided by hook
export const INTERNAL_ERROR = -2          // eg directory is corrupt
export const TOO_BIG = -3                 // something you tried to store was too big
export const TOO_SMALL = -4               // something you tried to store or provide was too small
export const DOESNT_EXIST = -5            // something you requested wasn't found
export const NO_FREE_SLOTS = -6           // when trying to load an object there is a maximum of 255 slots
export const INVALID_ARGUMENT = -7        // self explanatory
export const ALREADY_SET = -8             // returned when a one-time parameter was already set by the hook
export const PREREQUISITE_NOT_MET = -9    // returned if a required param wasn't set before calling
export const FEE_TOO_LARGE = -10          // returned if the attempted operation would result in an absurd fee
export const EMISSION_FAILURE = -11       // returned if an emitted tx was not accepted by rippled
export const TOO_MANY_NONCES = -12        // a hook has a maximum of 256 nonces
export const TOO_MANY_EMITTED_TXN = -13   // a hook has emitted more than its stated number of emitted txn
export const NOT_IMPLEMENTED = -14        // an api was called that is reserved for a future version
export const INVALID_ACCOUNT = -15        // an api expected an account id but got something else
export const GUARD_VIOLATION = -16        // a guarded loop or function iterated over its maximum
export const INVALID_FIELD = -17          // the field requested is returning sfInvalid
export const PARSE_ERROR = -18            // hook asked hookapi to parse something the contents of which was invalid
export const RC_ROLLBACK = -19            // used internally by hook api to indicate a rollback
export const RC_ACCEPT = -20              // used internally by hook api to indicate an accept
export const NO_SUCH_KEYLET = -21         // the specified keylet or keylet type does not exist or could not be computed
export const NOT_AN_ARRAY = -22
export const NOT_AN_OBJECT = -23
export const INVALID_FLOAT = -10024       // if the mantissa or exponent are outside normalized ranges
export const DIVISION_BY_ZERO = -25
export const MANTISSA_OVERSIZED = -26
export const MANTISSA_UNDERSIZED = -27
export const EXPONENT_OVERSIZED = -28
export const EXPONENT_UNDERSIZED = -29
export const OVERFLOW = -30
export const NOT_IOU_AMOUNT = -31
export const NOT_AN_AMOUNT = -32
export const CANT_RETURN_NEGATIVE = -33
export const NOT_AUTHORIZED = -34
export const PREVIOUS_FAILURE_PREVENTS_RETRY = -35
export const TOO_MANY_PARAMS = -36
export const INVALID_TXN = -37
export const RESERVE_INSUFFICIENT = -38
export const COMPLEX_NOT_SUPPORTED = -39
export const DOES_NOT_MATCH = -40
